/* Generated By:JJTree&JavaCC: Do not edit this line. LolParserConstants.java */
package lolparser.frontend;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface LolParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int EOLIGNORE = 3;
  /** RegularExpression Id. */
  int COMMENT = 4;
  /** RegularExpression Id. */
  int HAI = 8;
  /** RegularExpression Id. */
  int CAN = 9;
  /** RegularExpression Id. */
  int HAS = 10;
  /** RegularExpression Id. */
  int ITZ = 11;
  /** RegularExpression Id. */
  int A = 12;
  /** RegularExpression Id. */
  int I = 13;
  /** RegularExpression Id. */
  int N = 14;
  /** RegularExpression Id. */
  int IM = 15;
  /** RegularExpression Id. */
  int IN = 16;
  /** RegularExpression Id. */
  int IZ = 17;
  /** RegularExpression Id. */
  int YR = 18;
  /** RegularExpression Id. */
  int UP = 19;
  /** RegularExpression Id. */
  int KTHX = 20;
  /** RegularExpression Id. */
  int KTHXBYE = 21;
  /** RegularExpression Id. */
  int LOOP_LABEL = 22;
  /** RegularExpression Id. */
  int LOOP_OP = 23;
  /** RegularExpression Id. */
  int TROOF = 24;
  /** RegularExpression Id. */
  int FAIL = 25;
  /** RegularExpression Id. */
  int BOTH = 26;
  /** RegularExpression Id. */
  int EITHER = 27;
  /** RegularExpression Id. */
  int SAEM = 28;
  /** RegularExpression Id. */
  int DIFFRINT = 29;
  /** RegularExpression Id. */
  int WON = 30;
  /** RegularExpression Id. */
  int NOT = 31;
  /** RegularExpression Id. */
  int TIL = 32;
  /** RegularExpression Id. */
  int WILE = 33;
  /** RegularExpression Id. */
  int THAN = 34;
  /** RegularExpression Id. */
  int OUTTA = 35;
  /** RegularExpression Id. */
  int BIGGER = 36;
  /** RegularExpression Id. */
  int GIMMEH = 37;
  /** RegularExpression Id. */
  int PLZ = 38;
  /** RegularExpression Id. */
  int AWSUM_THX = 39;
  /** RegularExpression Id. */
  int O_NOES = 40;
  /** RegularExpression Id. */
  int O_RLY = 41;
  /** RegularExpression Id. */
  int YA_RLY = 42;
  /** RegularExpression Id. */
  int MEBBE = 43;
  /** RegularExpression Id. */
  int NO_WAI = 44;
  /** RegularExpression Id. */
  int OIC = 45;
  /** RegularExpression Id. */
  int OPEN = 46;
  /** RegularExpression Id. */
  int QUESTION = 47;
  /** RegularExpression Id. */
  int VISIBLE = 48;
  /** RegularExpression Id. */
  int INVISIBLE = 49;
  /** RegularExpression Id. */
  int BANG = 50;
  /** RegularExpression Id. */
  int OF = 51;
  /** RegularExpression Id. */
  int AN = 52;
  /** RegularExpression Id. */
  int SUM = 53;
  /** RegularExpression Id. */
  int DIFF = 54;
  /** RegularExpression Id. */
  int PRODUKT = 55;
  /** RegularExpression Id. */
  int QUOSHUNT = 56;
  /** RegularExpression Id. */
  int MOD = 57;
  /** RegularExpression Id. */
  int BIGGR = 58;
  /** RegularExpression Id. */
  int SMALLR = 59;
  /** RegularExpression Id. */
  int QUOTED_STRING = 60;
  /** RegularExpression Id. */
  int INTEGER = 61;
  /** RegularExpression Id. */
  int IDENT = 62;
  /** RegularExpression Id. */
  int EOL = 63;
  /** RegularExpression Id. */
  int TLDR = 64;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int COMMENT_OPEN = 1;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\"R\"",
    "\" \"",
    "<EOLIGNORE>",
    "<COMMENT>",
    "\"OBTW\"",
    "\"TLDR\"",
    "<token of kind 7>",
    "\"HAI\"",
    "\"CAN\"",
    "\"HAS\"",
    "\"ITZ\"",
    "\"A\"",
    "\"I\"",
    "\"N\"",
    "\"IM\"",
    "\"IN\"",
    "\"IZ\"",
    "\"YR\"",
    "\"UP\"",
    "\"KTHX\"",
    "\"KTHXBYE\"",
    "\"LOOP\"",
    "<LOOP_OP>",
    "\"TROOF\"",
    "\"FAIL\"",
    "\"BOTH\"",
    "\"EITHER\"",
    "\"SAEM\"",
    "\"DIFFRINT\"",
    "\"WON\"",
    "\"NOT\"",
    "\"TIL\"",
    "\"WILE\"",
    "\"THAN\"",
    "\"OUTTA\"",
    "\"BIGGER\"",
    "\"GIMMEH\"",
    "\"PLZ\"",
    "\"AWSUM THX\"",
    "\"O NOES\"",
    "\"O RLY\"",
    "\"YA RLY\"",
    "\"MEBBE\"",
    "\"NO WAI\"",
    "\"OIC\"",
    "\"OPEN\"",
    "\"?\"",
    "\"VISIBLE\"",
    "\"INVISIBLE\"",
    "\"!!\"",
    "\"OF\"",
    "\"AN\"",
    "\"SUM\"",
    "\"DIFF\"",
    "\"PRODUKT\"",
    "\"QUOSHUNT\"",
    "\"MOD\"",
    "\"BIGGR\"",
    "\"SMALLR\"",
    "<QUOTED_STRING>",
    "<INTEGER>",
    "<IDENT>",
    "<EOL>",
    "\"TLDR\"",
  };

}
